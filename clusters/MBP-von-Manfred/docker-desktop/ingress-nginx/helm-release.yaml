---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  chart:
    spec:
      chart: ingress-nginx
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
      version: "414"
  install:
    createNamespace: true
  interval: 1m0s
  targetNamespace: ingress-nginx
  values:
    commonLabels: {}
    controller:
      allowSnippetAnnotations: true
      autoscaling:
        enabled: false
        maxReplicas: 11
        minReplicas: 1
        targetCPUUtilizationPercentage: 50
        targetMemoryUtilizationPercentage: 50
      configMapNamespace: ""
      containerName: controller
      containerPort:
        http: 80
        https: 443
      dnsPolicy: ClusterFirst
      electionID: ingress-controller-leader
      enableMimalloc: true
      existingPsp: ""
      healthCheckHost: ""
      healthCheckPath: /healthz
      hostNetwork: false
      hostPort:
        enabled: true
        ports:
          http: 80
          https: 443
      image:
        allowPrivilegeEscalation: true
        chroot: false
        digest: sha256:5516d103a9c2ecc4f026efbd4b40662ce22dc1f824fb129ed121460aaa5c47f8
        digestChroot: sha256:d301551cf62bc3fb75c69fa56f7aa1d9e87b5079333adaf38afe84d9b7439355
        image: ingress-nginx/controller
        pullPolicy: IfNotPresent
        registry: registry.k8s.io
        runAsUser: 101
        tag: v1.2.1
      ingressClass: nginx
      ingressClassByName: false
      ingressClassResource:
        controllerValue: k8s.io/ingress-nginx
        default: true
        enabled: true
        name: nginx
      kind: Deployment
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      maxmindLicenseKey: ""
      metrics:
        enabled: true
        port: 10254
        service:
          annotations:
            prometheus.io/port: "10254"
            prometheus.io/scrape: "true"
          servicePort: 10254
          type: ClusterIP
        serviceMonitor:
          enabled: true
      minAvailable: 1
      minReadySeconds: 0
      name: controller
      nodeSelector:
        kubernetes.io/os: linux
      publishService:
        enabled: true
        pathOverride: ""
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      replicaCount: 1
      reportNodeInternalIp: false
      resources:
        limits:
          cpu: 100m
          memory: 90Mi
        requests:
          cpu: 100m
          memory: 90Mi
      scope:
        enabled: false
        namespace: ""
        namespaceSelector: ""
      service:
        appProtocol: true
        enabled: true
        ipFamilies:
        - IPv4
        ipFamilyPolicy: SingleStack
        nodePorts:
          http: 32080
          https: 32443
          tcp:
            "8080": 32808
        ports:
          http: 80
          https: 443
        targetPorts:
          http: http
          https: https
        type: NodePort
      tcp:
        annotations: {}
        configMapNamespace: ""
      terminationGracePeriodSeconds: 300
      udp:
        configMapNamespace: ""
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
      watchIngressWithoutClass: false

